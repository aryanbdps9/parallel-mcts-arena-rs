# Multi-game MCTS Engine Project Configuration

[package]
name = "parallel-mcts-arena"
version = "0.1.0"
rust-version = "1.88.0"
edition = "2024"
description = "A multi-threaded Monte Carlo Tree Search engine that plays four classic board games with configurable AI opponents"
readme = "README.md"
license-file = "LICENSE"
keywords = ["games", "mcts", "ai", "board-games", "tui"]
categories = ["games", "command-line-utilities"]

# Runtime Dependencies
[dependencies]
# Random number generation for MCTS simulations
rand = "0.9.1"
# Command line argument parsing
clap = { version = "4.5.40", features = ["derive"] }
# Parallel processing for multi-threaded MCTS
rayon = "1.10.0"
# High-performance thread synchronization
parking_lot = "0.12.3"
# Terminal text coloring (used for debug output)
colored = "3.0.0"
# High-quality random number generator
rand_xoshiro = "0.7.0"
# Terminal UI framework with crossterm support
ratatui = { version = "0.29.0", features = ["crossterm"] }
# Cross-platform terminal manipulation
crossterm = "0.29.0"
# Asynchronous runtime
tokio = { version = "1.45.1", features = ["full"] }
# CPU information and control
num_cpus = "1.16.0"

# Library configuration
[lib]
name = "mcts"
path = "src/lib.rs"

# Binary configuration
[[bin]]
name = "play"
path = "src/main.rs"

# Release build optimizations for best AI performance
[profile.release]
lto = "fat"           # Link-time optimization for smaller, faster binary
codegen-units = 1     # Single codegen unit for maximum optimization
panic = "abort"       # Abort on panic instead of unwinding (smaller binary)
strip = true          # Remove debug symbols from binary

